# -*- coding: utf-8 -*-
#
# This file created with KivyCreatorProject
# <https://github.com/HeaTTheatR/KivyCreatorProgect
#
# Copyright (c) 2020 Ivanov Yuri and KivyMD
#
# For suggestions and questions:
# <kivydevelopment@gmail.com>
#
# LICENSE: MIT

#:import MetricsScreen libs.uix.baseclass.metricsscreen.MetricsScreen


<MetricsScreen>:
    name: 'metrics'
    #on_kv_post: app.refreshValuesToDisplayOnScreen()
    
    KMDStackLayout:
        KMainMDLabel:
            text: str(app.myProfile.profileName)
        KMDSeparator:
        KMDLabel:
            text: str(app.myProfile.profileGoal)
        KMDSeparator:
        KMainMDLabelLeft:
            text: app.translation._('Height')
        KMDSeparator:
        KMDCardInput2:
            KMDTextField:
                id: profile_height_integerpart
                input_filter: 'int'
                text: str(app.myProfile.heightIntegerPart)
                hint_text: app.translation._('meter')
                on_text_validate: root.initProfileUpdate('heightIntegerPart')
                on_focus: root.on_focus(args[1], 'heightIntegerPart')
        KMDCardInput2:
            KMDTextField:
                input_filter: 'int'
                id: profile_height_decimalpart
                text: str(app.myProfile.heightDecimalPart)
                hint_text: app.translation._('centimeter')
                on_text_validate: root.initProfileUpdate('heightDecimalPart')
                on_focus: root.on_focus(args[1], 'heightDecimalPart')
        KMDSeparator:
        KMainMDLabelLeft:
            text: app.translation._('Weight')
        KMDSeparator:
        KMDCardInput2:
            KMDTextField:
                hint_text: app.translation._('kilogram')
                input_filter: 'int'    
                id: profile_weight_integerpart
                text: str(app.myProfile.weightIntegerPart)
                on_text_validate: root.initProfileUpdate('weightIntegerPart')
                on_focus: root.on_focus(args[1], 'weightIntegerPart')
        KMDCardInput2:
            KMDTextField:
                hint_text: app.translation._('gram')
                input_filter: 'int'
                id: profile_weight_decimalpart
                text: str(app.myProfile.weightDecimalPart)
                on_text_validate: root.initProfileUpdate('weightDecimalPart')
                on_focus: root.on_focus(args[1], 'weightDecimalPart')
        KMainMDLabelLeft:
            text: app.translation._('Age & Gender')
        KMDSeparator:
        KMDCardInput2:
            KMDTextField:
                hint_text: app.translation._('Age')
                input_filter: 'int'
                id: profile_age
                text: str(app.myProfile.age)
                on_text_validate: root.initProfileUpdate('age')
                on_focus: root.on_focus(args[1], 'age')
        KMDCardInput2:
            Spinner:
                id: profile_gender
                font_name: "Arial"
                text: str(app.myProfile.displayGender())
                values: str(app.myProfile.getAllGenders()['0']), str(app.myProfile.getAllGenders()['1'])
                on_text: root.initProfileUpdate('gender')
        KMDSeparator:
        KMainMDLabelLeft:
            text: app.translation._('Activity Level Factor')
        KMDCardInput2:
            Spinner:
                id: profile_activityFactor
                text: str(app.myProfile.displayActivityFactor())
                values: str(app.myProfile.getAllActivityFactors()['1']), str(app.myProfile.getAllActivityFactors()['2']), str(app.myProfile.getAllActivityFactors()['3']), str(app.myProfile.getAllActivityFactors()['4']), str(app.myProfile.getAllActivityFactors()['5']), str(app.myProfile.getAllActivityFactors()['6'])
                on_text: root.initProfileUpdate('activityFactor')
        KMDSeparator:
        KMainMDLabelLeft:
            text: app.translation._('Measurement for women (Fat Percentage)')
        KMDCard3:
            KMDTextField:
                hint_text: app.translation._('Triceps (mm)')
                input_filter: 'int'
                id: profile_female_triceps
                text: str(app.myProfile.triceps)
                on_text_validate: root.initProfileUpdate('femaletriceps')
                on_focus: root.on_focus(args[1], 'femaletriceps')
        KMDCard3:
            KMDTextField:
                hint_text: app.translation._('Supprialium (mm)')
                input_filter: 'int'
                id: profile_female_suprailium
                text: str(app.myProfile.suprailium)
                on_text_validate: root.initProfileUpdate('femalesuprailium')
                on_focus: root.on_focus(args[1], 'femalesuprailium')
        KMDCard3:
            KMDTextField:
                hint_text: app.translation._('Thigh (mm)')
                input_filter: 'int'
                id: profile_female_thigh
                text: str(app.myProfile.thigh)
                on_text_validate: root.initProfileUpdate('femalethigh')
                on_focus: root.on_focus(args[1], 'femalethigh')
        KMDSeparator:
        KMainMDLabelLeft:
            text: app.translation._('Measurement for men (Fat Percentage)')
        KMDCard3:
            KMDTextField:
                hint_text: app.translation._('Triceps (mm)')
                input_filter: 'int'
                id: profile_male_triceps
                text: str(app.myProfile.triceps)
                on_text_validate: root.initProfileUpdate('maletriceps')
                on_focus: root.on_focus(args[1], 'maletriceps')
        KMDCard3:
            KMDTextField:
                hint_text: app.translation._('Abdomen (mm)')
                input_filter: 'int'
                id: profile_male_abdomen
                text: str(app.myProfile.abdomen)
                on_text_validate: root.initProfileUpdate('maleabdomen')
                on_focus: root.on_focus(args[1], 'maleabdomen')
        KMDCard3:
            KMDTextField:
                hint_text: app.translation._('Thigh (mm)')
                input_filter: 'int'
                id: profile_male_thigh
                text: str(app.myProfile.thigh)
                on_text_validate: root.initProfileUpdate('malethigh')
                on_focus: root.on_focus(args[1], 'malethigh')







        
